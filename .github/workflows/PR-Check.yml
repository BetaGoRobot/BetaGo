name: PR-Check

on:
  pull_request:
    branches: [master]
    paths-ignore:
      - "neteaseapi/netease-api-service/*"
      - "qqmusicapi/qqmusic-api-service/*"
      - "README.md"
  workflow_dispatch:
    inputs:
      name:
        description: "触发用途"
        required: true
        default: "测试"

env:
  IMAGE_NAME: kevinmatt/betago
  ROBOT_NAME: BetaGo
  TEST_CHAN_ID: "4988093461275944"
  ROBOT_ID: "3508390651"
  NETEASE_PHONE: "${{ secrets.NETEASE_PHONE }}"
  NETEASE_PASSWORD: "${{ secrets.NETEASE_PASSWORD }}"
  TENCENT_HEADER: ccr.ccs.tencentyun.com
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build image
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 15
          command:  |
            zip \
            -r \
            -9 \
            -q betago.zip \
            . \
            -x ".git/*" \
            -x "qqmusicapi/qqmusic-api-service/*" \
            -x "neteaseapi/netease-api-service/*"
            DOCKER_BUILDKIT=1 docker build \
             --build-arg BOTAPI="${{ secrets.BOTAPI }}" \
             --build-arg ROBOT_NAME=$ROBOT_NAME \
             --build-arg TEST_CHAN_ID=$TEST_CHAN_ID \
             --build-arg ROBOT_ID=$ROBOT_ID \
             --build-arg NETEASE_PHONE=$NETEASE_PHONE  \
             --build-arg NETEASE_PASSWORD=$NETEASE_PASSWORD \
             --build-arg COS_SECRET_ID=${{ secrets.COS_SECRET_ID }} \
             --build-arg COS_SECRET_KEY=${{ secrets.COS_SECRET_KEY }} \
             --build-arg COS_BUCKET_REGION_URL=${{ secrets.COS_BUCKET_REGION_URL }} \
             --build-arg COS_BASE_URL=${{ secrets.COS_BASE_URL }} \
             --build-arg MAIL_SECRET=${{ secrets.MAIL_SECRET }} \
             --build-arg GPT_TOKEN=${{ secrets.GPT_TOKEN }} \
             --build-arg NEWS_API_KEY=${{ secrets.NEWS_API_KEY }} \
             --build-arg GOTIFY_URL=${{ secrets.GOTIFY_URL }} \
             --build-arg GOTIFY_APPLICATION_TOKEN=${{ secrets.GOTIFY_APPLICATION_TOKEN }} \
             --build-arg GITHUB_SHA=$GITHUB_SHA \
             . \
             --file scripts/Dockerfile \
             --tag $IMAGE_NAME
          
